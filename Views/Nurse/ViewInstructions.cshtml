@model List<Ward_Management_System.ViewModels.PatientsLatestTreatmentVM>
@{
    ViewData["Title"] = "View Instructions";
    Layout = "~/Views/Shared/_UserLayout.cshtml";

      Pager pager = new Pager();
    int pageNo = 0;
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<div class="container-fluid patient-dashboard py-5">
    <div class="row justify-content-center mb-4">
        <div class="col-md-10 text-center">
            <h2 class="fw-bold text-primary">List Of  Patients</h2>
            <p class="text-muted">View all patient and their doctors instructions.</p>
        </div>
    </div>

     @* Live Searching  *@
    <div class="row mb-4">
        <div class="col-md-6 offset-md-3">
            <input type="text" id="searchInput" class="form-control shadow-sm" placeholder="Search by name, age, or ID...">
        </div>
    </div>

    <div  class="row">
        <div class="col-md-10 offset-md-1">
            <div class="card shadow-sm">
                @if (!Model.Any())
                {
                    <div class="alert alert-info text-center">
                        No Patients Currently Admitted
                    </div>
                }
                else
                {
                    <div class="card-body">
                    <table class="table table-hover align-middle" id="InstructionsTable">
                        <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>Name</th>
                                <th>ID Number</th>
                                <th>Age</th>
                                <th>Gender</th>
				                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                                @{
                                    int count = ((pager.CurrentPage - 1) * pager.PageSize) + 1;
                                }
                            @foreach (var patient in Model)
                            {
                                <tr>
                                    <td>@count</td>
                                        <td>
                                            @patient.FullName
                                            @if (patient.IsRecent)
                                            {
                                                <span class="badge bg-danger ms-2 new-badge" data-appointment-id="@patient.AppointmentId">New</span>
                                            }

                                        </td>

                                    <td>@patient.IdNumber</td>
					                <td>@patient.Age</td>
                                    <td>@patient.Gender</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#instructionsModal_@patient.AppointmentId">
                                            View
                                        </button>

                                    </td>
                                    </tr>
                                    count++;

                                <!-- Modal -->
                                <div class="modal fade" id="instructionsModal_@patient.AppointmentId" tabindex="-1" aria-labelledby="label_@patient.AppointmentId" aria-hidden="true">
                                    <div class="modal-dialog modal-lg">
                                        <div class="modal-content shadow-sm">
                                            <div class="modal-header bg-primary text-white">
                                                <h5 class="modal-title" id="label_@patient.AppointmentId">Latest Instruction for @patient.FullName</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                            </div>
                                            <div class="modal-body">
                                                @if (!string.IsNullOrEmpty(patient.Procedure))
                                                {
                                                    <p><strong>Date:</strong> @patient.TreatmentDate?.ToString("dd MMM yyyy")</p>
                                                    <p><strong>Procedure:</strong> @patient.Procedure</p>
                                                    <p><strong>Instructions:</strong> @patient.Notes</p>
                                                    <p><strong>Doctor:</strong> @patient.DoctorName</p>
                                                }
                                                else
                                                {
                                                    <p class="text-muted">No instructions available.</p>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </tbody>
                    </table>
                        @*  Paging shared partial view *@
                        <div class="=container">
                            @if (pager.TotalPages > 0)
                            {
                                <ul class="pagination justify-content-end">
                                    @if (pager.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-controller="Nurse" asp-action="ViewInstructions" asp-route-pg="1">First</a>
                                        </li>
                                        <li class="page-item">
                                            <a class="page-link" asp-controller="Nurse" asp-action="ViewInstructions" asp-route-pg="@(pager.CurrentPage - 1)">Previous</a>
                                        </li>
                                    }
                                    @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
                                    {
                                        <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                                            <a class="page-link" asp-controller="Nurse" asp-action="ViewInstructions" asp-route-pg="@pge">@pge</a>
                                        </li>
                                    }
                                    @if (pager.CurrentPage < pager.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-controller="Nurse" asp-action="ViewInstructions" asp-route-pg="@(pager.CurrentPage + 1)">Next</a>
                                        </li>
                                        <li>
                                            <a class="page-link" asp-controller="Nurse" asp-action="ViewInstructions" asp-route-pg="@(pager.TotalPages)">Last</a>
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <!-- Back Button -->
    <div class="text-center mt-4">
        <a asp-action="Index" asp-controller="Nurse" class="btn btn-secondary px-4">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
        </a>
    </div>
</div>
@section Scripts{
    <partial name="_ValidationScriptsPartial"/>
    <script>
              document.addEventListener("DOMContentLoaded", function () {
            // Live searching
            const searchInput = document.getElementById("searchInput");
            if (searchInput) {
                searchInput.addEventListener("keyup", function () {
                    const searchValue = this.value.toLowerCase();
                    const rows = document.querySelectorAll("#InstructionsTable tbody tr");
                    rows.forEach(row => {
                        const rowText = row.innerText.toLowerCase();
                        row.style.display = rowText.includes(searchValue) ? "" : "none";
                    });
                });
            }

            // When modal opens, mark instruction as viewed and fade badge
            document.querySelectorAll('[id^="instructionsModal_"]').forEach(modalEl => {
                modalEl.addEventListener('show.bs.modal', function () {
                    const appointmentId = this.id.split('_')[1];

                    fetch(`/Nurse/MarkInstructionAsViewed?appointmentId=${appointmentId}`, {
                        method: "POST",
                        headers: {
                            "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]')?.value
                        }
                    }).then(() => {
                        // Remove badge from table
                        const badge = document.querySelector(`.new-badge[data-appointment-id='${appointmentId}']`);
                        if (badge) {
                            badge.style.transition = "opacity 0.5s";
                            badge.style.opacity = 0;
                            setTimeout(() => badge.remove(), 500);
                        }

                        // // Optionally update dashboard count
                        // const countBadge = document.querySelector('#dashboardNewCount');
                        // if (countBadge) {
                        //     let count = parseInt(countBadge.textContent);
                        //     count = Math.max(count - 1, 0);
                        //     countBadge.textContent = count;
                        //     if (count === 0) countBadge.style.display = "none";
                        // }
                    });
                });
            });
        });

    </script>
}